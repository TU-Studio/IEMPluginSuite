# gitlab-ci configuration for the IEM Plugin Suite

stages:
  - pre-check
  - build
  - test
  - deploy

variables:
## leave this uncommented to build all projects (except _PluginTemplate)
  #PROJECTS: AllRADecoder BinauralDecoder CoordinateConverter DirectionalCompressor DirectivityShaper DistanceCompensator DualDelay EnergyVisualizer FdnReverb MatrixMultiplier MultiBandCompressor MultiEncoder MultiEQ OmniCompressor ProbeDecoder RoomEncoder SceneRotator SimpleDecoder StereoEncoder ToolBox
  GIT_SUBMODULE_STRATEGY: recursive
  CONFIG: Release
  JUCEVERSION: 6.0.7

###################################################
# cleanup after the job (e.g. rename files for the artifacts...)
.after_script:
  - test ! -d IEM || find IEM -type f -exec file {} +
  - find DualDelay/Builds/ -type f -exec file {} +

###################################################
### configuration templates
.artifacts:
  artifacts:
    paths:
      - VST3
      - VST
      - Standalone
      - ChangeLog.md
    expire_in: 1 week

.run_selected:
  only:
    - master
    - develop
    - ci-test

.build:linux:
  stage: build
  image: ubuntu:focal
  tags:
    - docker
  variables:
    DEBIAN_FRONTEND: noninteractive
  script:
# install dependencies
    - apt-get update -y
    - apt-get dist-upgrade -y
    - apt-get install -y --no-install-recommends xvfb xauth curl unzip build-essential ca-certificates wget cmake
    - apt-get install -y --no-install-recommends libwebkit2gtk-4.0-dev libasound2-dev libfreetype6-dev libcurl4-gnutls-dev libgl1-mesa-dev libx11-dev libxext-dev libxinerama-dev libxrandr-dev libgtk-3-dev
    - apt-get install -y --no-install-recommends libjack-dev libfftw3-dev
    - cmake --version
# get VST2SDK
    - .git-ci/getvst.sh
# run the actual build
    - mkdir build
    - cd build
    - cmake .. -DCMAKE_BUILD_TYPE=Release -DIEM_BUILD_VST2=ON -DVST2SDKPATH=src/VST_SDK/VST2_SDK/ -DIEM_BUILD_STANDALONE=ON
    - make -j $(nproc)
    - cd ..

# collect binaries for artifacts
    - mkdir VST3
    - cp -r build/*/*_artefacts/Release/VST3/*.vst3 VST3/
    - mkdir VST
    - cp -r build/*/*_artefacts/Release/VST/*.so VST/
    - mkdir Standalone
    - find build/*/*_artefacts/Release/Standalone/ -maxdepth 1 -type f -executable -not -name "*.so" -exec cp {} Standalone/ ";"

.build:osx:
  stage: build
  tags:
    - osx10.14
  script:
# install dependencies
    - HOMEBREW_NO_AUTO_UPDATE=1 brew install jack || true
# get VST2SDK
    - .git-ci/getvst.sh
# run the actual build
    - mkdir build
    - cd build
    - cmake .. -DCMAKE_BUILD_TYPE=Release  -DIEM_BUILD_VST2=ON -DVST2SDKPATH=src/VST_SDK/VST2_SDK/ -DIEM_BUILD_STANDALONE=ON
    - make -j $(sysctl -n hw.ncpu)
    - cd ..
# collect binaries for artifacts
    - mkdir VST3
    - cp -r build/*/*_artefacts/Release/VST3/*.vst3 VST3/
    - mkdir VST
    - cp -r build/*/*_artefacts/Release/VST/*.vst VST/
    - mkdir Standalone
    - cp -r build/*/*_artefacts/Release/Standalone/*.app Standalone/

.build:windows:
  stage: build
  tags:
    - windows
  variables:
    IEMCI_CONFIGURATIONS: vs2017
  script:
# run the actual build
    - mkdir build
    - cd build
    - cmake ..
    - cmake --build . --target ALL_BUILD --config Release
    - test -n "${PROJECTS}" || PROJECTS=$(make showprojects)
    - make system CONFIG=$CONFIG BITS=$BITS PROJUCER="/c/JUCE/Projucer.exe"
    - make CONFIG=$CONFIG BITS=$BITS PROJUCER="/c/JUCE/Projucer.exe" PROJECTS="${PROJECTS}" remove_intermediates=yes
# collect binaries for artifacts
#     - mkdir -p IEM/standalone
#     - cp */Builds/*/*/*/VST/*.dll IEM/
#     - cp */Builds/*/*/*/*/*.exe IEM/standalone/
# # embed non-standard libraries in the bundles
# # FIXME: this requires that we have either x64 or x86, not both
#     - cp resources/fftw3/*/libfftwf*.dll IEM/standalone/
#     - cp resources/fftw3/*/libfftwf*.dll IEM/

###################################################
# expand the templates to real jobs
#
linux:
  extends:
    - .artifacts
    - .run_selected
    - .build:linux
  artifacts:
    name: IEMPluginSuite_linux

osx:
  extends:
    - .artifacts
    - .run_selected
    - .build:osx
  artifacts:
    name: IEMPluginSuite_macOS

.windows:
  variables:
    IEMCI_CONFIGURATIONS: vs2017
  extends:
    - .artifacts
    - .run_selected
    - .build:windows

.windows64:
  variables:
    BITS: 64
  extends:
    - .windows
  artifacts:
    name: IEMPluginSuite_w64

.windows32:
  extends:
    - .windows
  variables:
    BITS: 32
  artifacts:
    name: IEMPluginSuite_w32
